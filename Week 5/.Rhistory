library(tseries)
library(timsac)
library(TTR)
library(fpp)
#NOTE: to add recession bands:
# Example: Presidents approval rating
#plot(presidents, type='n', ylab="Presidents approval rating")
#nberShade()
#lines(presidents)
# Read in the data into a ts data file:
caemp=read.table("caemp.txt")
caemp_ts<-ts(caemp,start=1962.1,freq=4)
windows()
plot(caemp_ts,xlab='Year', ylab="Canadian Employment", lwd=2)
grid()
# Look at the correlogram
windows()
par(mfrow=c(3,1))
acf(caemp_ts, type = "covariance", main="Autocovariance",lag.max=50, ylab="COV")
acf(caemp_ts, type = "correlation", main="Autocorrelation",lag.max=50,ylab="ACF")
acf(caemp_ts, type = "partial",main="Partial Autocorrelation",lag.max=50, ylab="PACF")
# The plots show evidence of serial corrleation --> cycles
# ACF plot: High during business cylce booms, and low during recessions.
# For further discussion read pages 130-132 of the textbook.
# Test the white noise Ho:
acf_val=acf(caemp_ts)$acf
Box.test(acf_val, type = "Ljung-Box")
Box.test(acf_val, type = "Box-Pierce")
#Sometimes low order ARMA is better that high order AR or MA
# MA(q) Model Fitting (see page 155)
ma1=arma(caemp_ts,order=c(0,1)) #Same as MA(1) = AR(0) + MA(1)
summary(ma1)
ma2=arma(caemp_ts,order=c(0,2)) #Same as MA(2) = AR(0) + MA(2)
summary(ma2)
ma3=arma(caemp_ts,order=c(0,10)) #Same as MA(10) = AR(0) + MA(10)
summary(ma3)
#plot(ma3)
# Look at all the MA(q) fits
windows()
plot(caemp_ts,xlab='Year', ylab="Canadian Employment", lwd=2)
grid()
lines(ma1$fitted.values,col="blue",lwd=2)
lines(ma2$fitted.values,col="seagreen2",lwd=2)
lines(ma3$fitted.values,col="red",lwd=2)
legend("topright",legend=c("Data","MA(10)","MA(2)","MA(1)"),text.col=1:4,bty="n")
# Examine the best fit MA(q) model
windows()
par(mfrow=c(2,2))
plot(caemp_ts,xlab='Year', ylab="Canadian Employment", lwd=2)
lines(ma3$fitted.values,col="red",lwd=1,lty=1)
plot(ma3$residuals,ylab="Residuals")
acf(ma3$residuals[12:136], type = "correlation", main="Autocorrelation",lag.max=13,ylab="ACF")
acf(ma3$residuals[12:136], type = "partial",main="Partial Autocorrelation",lag.max=13, ylab="PACF")
# Overall, even with the high q-order, the MA(q) model is not that good!
# AR(p) Model Fitting (see page 157)
ar1=ar(caemp_ts,FALSE,1) #Same as AR(1), FALSE is needed to allow for different values of p
ar1
ar2=ar(caemp_ts,FALSE,2) #Same as AR(2), Note: if no set FALSE, it will figure the best order (p)
ar2
ar3=ar(caemp_ts,FALSE,3) #Same as AR(3)
ar3
# You can also use ARMA(p,q) but setting q=0 this time.
ar1=arma(caemp_ts,order=c(1,0)) #Same as AR(1) = AR(1) + MA(0)
summary(ar1)
ar2=arma(caemp_ts,order=c(2,0)) #Same as AR(2) = AR(2) + MA(0)
summary(ar2)
ar3=arma(caemp_ts,order=c(3,0)) #Same as AR(3) = AR(3) + MA(0)
summary(ar3)
#plot(ar2)
# Look at all the AR(p) fits
windows()
plot(caemp_ts,xlab='Year', ylab="Canadian Employment", lwd=2)
grid()
lines(ar1$fitted.values,col="blue",lwd=2,lty=2)
lines(ar2$fitted.values,col="seagreen2",lwd=2,lty=2)
lines(ar3$fitted.values,col="red",lwd=2,lty=2)
legend("topright",legend=c("Data","AR(3)","AR(2)","AR(1)"),text.col=1:4,bty="n")
# Examine the best fit AR(p) model
windows()
par(mfrow=c(2,2))
plot(caemp_ts,xlab='Year', ylab="Canadian Employment", lwd=2)
lines(ar2$fitted.values,col="red",lwd=1,lty=1)
plot(ar2$residuals,ylab="Residuals")
acf(ar2$residuals[3:136], type = "correlation", main="Autocorrelation",lag.max=13,ylab="ACF")
acf(ar2$residuals[3:136], type = "partial",main="Partial Autocorrelation",lag.max=13, ylab="PACF")
# We can see a significant improvement e.g., from looking at the ACF and PACF plots, the
# residuals now look consistent with noise, suggesting we accounted for most (or all) of
# the dynamics left after detrending and seasonally adjusting the data.
# NOTE: With AR we only need p=2 unlike MA which required a much higher order polynomial.
# ARMA(p,q) Model Fitting (see page 157)
arma1=arma(caemp_ts,order=c(1,1)) # AR(1) + MA(1)
summary(arma1)
arma2=arma(caemp_ts,order=c(1,2)) # AR(1) + MA(2)
summary(arma2)
arma3=arma(caemp_ts,order=c(2,1)) # AR(2) + MA(1)
summary(arma3)
arma4=arma(caemp_ts,order=c(2,2)) # AR(2) + MA(2)
summary(arma4)
#plot(ar2)
# Look at all the ARMA(p,q) fits
windows()
plot(caemp_ts,xlab='Year', ylab="Canadian Employment", lwd=2)
grid()
lines(arma1$fitted.values,col="blue",lwd=2,lty=2)
lines(arma2$fitted.values,col="seagreen2",lwd=2,lty=2)
lines(arma3$fitted.values,col="red",lwd=2,lty=2)
legend("topright",legend=c("Data","ARMA(2,1)","ARMA(1,2)","ARMA(1,1)"),text.col=1:4,bty="n")
# Examine the best fit AR(p) model
windows()
par(mfrow=c(2,2))
plot(caemp_ts,xlab='Year', ylab="Canadian Employment", lwd=2)
lines(arma3$fitted.values,col="red",lwd=1,lty=1)
plot(arma3$residuals,ylab="Residuals")
acf(arma3$residuals[3:136], type = "correlation", main="Autocorrelation",lag.max=13,ylab="ACF")
acf(arma3$residuals[3:136], type = "partial",main="Partial Autocorrelation",lag.max=13, ylab="PACF")
# Simulate AR(p), MA(q), and ARMA(p,q) process and test the theory :)
# 1. Simulate an MA(2) process. Accroding to theory, the ACF cuts-off at lag=2
ma.sim<-arima.sim(model=list(ma=c(-.7,.1)),n=1000) #Note: 'ma' has 2 coefficients, hence MA(2)
windows()
par(mfrow=(c(2,1)))
plot(ma.sim)
acf(ma.sim)
# 2. Simulate an AR(4) process. Accroding to theory, the PACF cuts-off at lag=4
ar.sim<-arima.sim(model=list(ar=c(.9,-.2,-.8,0.5)),n=10000) #Note: 'ar' has 2 coefficients, hence AR(4)
windows()
par(mfrow=c(2,1))
plot(ar.sim)
pacf(ar.sim)
# 2. Simulate an ARMA(2,2) process. According to theory,...??
#if the value for the ARMA are comparable, then it would be hard to identify because
#there are other dynamics that come in
arma.sim<-arima.sim(model=list(ar=c(.9,-.2),ma=c(-.7,.1)),n=10000)
windows()
par(mfrow=c(3,1))
plot(arma.sim)
acf(arma.sim)
pacf(arma.sim)
View(caemp)
View(caemp)
acf(caemp_ts)
acf(caemp_ts)
acf(caemp_ts)$acf
acf(caemp_ts, type = "covariance", main="Autocovariance",lag.max=50, ylab="COV")
acf(caemp_ts, type = "correlation", main="Autocorrelation",lag.max=50,ylab="ACF")
acf(caemp_ts, type = "partial",main="Partial Autocorrelation",lag.max=50, ylab="PACF")
Box.test(acf_val, type = "Ljung-Box")
Box.test(acf_val, type = "Box-Pierce")
ma1=arma(caemp_ts,order=c(0,1)) #Same as MA(1) = AR(0) + MA(1)
summary(ma1)
ma2=arma(caemp_ts,order=c(0,2)) #Same as MA(2) = AR(0) + MA(2)
summary(ma2)
ma3=arma(caemp_ts,order=c(0,10)) #Same as MA(10) = AR(0) + MA(10)
summary(ma3)
plot(caemp_ts,xlab='Year', ylab="Canadian Employment", lwd=2)
lines(arma3$fitted.values,col="red",lwd=1,lty=1)
plot(arma3$residuals,ylab="Residuals")
acf(arma3$residuals[3:136], type = "correlation", main="Autocorrelation",lag.max=13,ylab="ACF")
acf(arma3$residuals[3:136], type = "partial",main="Partial Autocorrelation",lag.max=13, ylab="PACF")
windows()
par(mfrow=c(2,2))
plot(caemp_ts,xlab='Year', ylab="Canadian Employment", lwd=2)
lines(arma3$fitted.values,col="red",lwd=1,lty=1)
plot(arma3$residuals,ylab="Residuals")
acf(arma3$residuals[3:136], type = "correlation", main="Autocorrelation",lag.max=13,ylab="ACF")
acf(arma3$residuals[3:136], type = "partial",main="Partial Autocorrelation",lag.max=13, ylab="PACF")
ma.sim<-arima.sim(model=list(ma=c(-.7,.1)),n=1000) #Note: 'ma' has 2 coefficients, hence MA(2)
windows()
par(mfrow=(c(2,1)))
plot(ma.sim)
acf(ma.sim)
ar.sim<-arima.sim(model=list(ar=c(.9,-.2,-.8,0.5)),n=10000) #Note: 'ar' has 2 coefficients, hence AR(4)
windows()
par(mfrow=c(2,1))
plot(ar.sim)
pacf(ar.sim)
arma.sim<-arima.sim(model=list(ar=c(.9,-.2),ma=c(-.7,.1)),n=10000)
windows()
par(mfrow=c(3,1))
plot(arma.sim)
acf(arma.sim)
pacf(arma.sim)
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/Xiang/OneDrive/Desktop/Econ-144/Homework/Hw 3")
rm(list=ls(all=TRUE))
library(lattice)
library(foreign)
library(MASS)
library(car)
require(stats)
require(stats4)
library(KernSmooth)
library(fastICA)
library(cluster)
library(leaps)
library(mgcv)
library(rpart)
library(pan)
library(mgcv)
library(DAAG)
library("TTR")
library(tis)
require("datasets")
require(graphics)
library("forecast")
#install.packages("astsa")
#require(astsa)
library(xtable)
# New libraries added:
library(stats)
library(TSA)
library(timeSeries)
library(fUnitRoots)
library(fBasics)
library(tseries)
library(timsac)
library(TTR)
library(fpp)
#Obtaining the simulated ma(2) model with 10000 points
theory_ma2 = arima.sim(model = list(ma = c(-2, 1.35)), n = 10000)
summary(theory_ma2)
ARMAacf(theory_ma2, lag.max = 10)
ARMAacf(ma = c(-2, 1.35), lag.max = 10)
plot(theory_ma2)
theory_ma2(1)
theory_ma2[1]
help(acf)
acf(theory_ma2[1])
acf(theory_ma2)
acf(theory_ma2[1:100])
acf(theory_ma2[1:100], lag.max = 10)
acf(theory_ma2[1:100], lag.max = 10)
acf(theory_ma2[1:100], main = "ACF for the first 100 observations \n of the simulated MA(2)", lag.max = 10)
acf(theory_ma2[1:100], main = "ACF for the first 100 observations \n of the simulated MA(2)", lag.max = 10)
acf(theory_ma2[1:100], main = "ACF for the first 100 observations \n of the simulated MA(2)", lag.max = 10)
ARMAacf(ma = c(-2, 1.35), lag.max = 10)
Box.test(theory_ma2, lag = 10, type = c("Box-Pierce", "Ljung-Box"))
library("quantmod")
getSymbols("ATVI", crc = NASDAQ)
getSymbols("ATVI", src = "NASDAQ")
getSymbols("ATVI", src = "nasdaq")
getSymbols("ATVI", src = "yahoo")
ATVI
View(ATVI)
View(ATVI)
ATVI.close
ATVI$close
ATVI$ATVI.Close
plot(ATVI$ATVI.Close)
acf(atvi_closedP_ts)
getSymbols("ATVI", src = "yahoo")
atvi_closedP_ts = ATVI$ATVI.Close
acf(atvi_closedP_ts)
acf(atvi_closedP_ts, main = "ACF of the Activision Blizzard's stock price")
acf(atvi_closedP_ts, main = "ACF of the Activision Blizzard's stock price")
pacf(atvi_closedP_ts, main = "ACF of the Activision Blizzard's stock price")
help("arima")
ar2 = arima(atvi_closedP_ts, c(2,1,0))
summary(ar2)
plot(ar2)
ar2 = arima(atvi_closedP_ts, c(2,1,0))
summary(ar2)
ar2 = arima(atvi_closedP_ts, c(2,1,0))
acf(ar2)
View(ar2)
summary(atvi_closedP_ts)
getSymbols("ATVI", src = "yahoo")
atvi_closedP_ts = ATVI$ATVI.Close
atvi_closedP_ts = as.ts(atvi_closedP_ts, start = head(index(atvi_closedP_ts), 1), end = tail(index(atvi_closedP_ts), 1))
atvi_closedP_ts
plot(atvi_closedP_ts)
ATVI$ATVI.Close
getSymbols("ATVI", src = "yahoo")
atvi_closedP_ts = ATVI$ATVI.Close
head(index(atvi_closedP_ts,1))
getSymbols("ATVI", src = "yahoo")
getSymbols("ATVI", src = "yahoo")
atvi <- as.data.frame(ATVI)
data <- data.frame(dates = as.Date(row.names(atvi)), atvi = atvi[,1])
data
plot(data)
acf(data, main = "ACF of the Activision Blizzard's stock price")
pacf(data, main = "PACF of the Activision Blizzard's stock price")
acf(data, main = "ACF of the Activision Blizzard's stock price")
pacf(data, main = "PACF of the Activision Blizzard's stock price")
acf(data, main = "ACF of the Activision Blizzard's stock price")
pacf(data, main = "PACF of the Activision Blizzard's stock price")
View(data)
View(data)
getSymbols("ATVI", src = "yahoo")
atvi <- as.data.frame(ATVI)
data <- data.frame(dates = as.Date(row.names(atvi)), atvi = atvi[,1])
attach(data)
atvi_ts <- ts(atvi, start = 2007, end = 2018.4, freq = 255)
acf(atvi_ts, main = "ACF of the Activision Blizzard's stock price")
pacf(atvi_ts, main = "PACF of the Activision Blizzard's stock price")
atvi_ts
plot(atvi_ts)
View(atvi_ts)
View(atvi_ts)
length(data)
length(data$atvi)
atvi_ts[1:2800]
View(atvi_ts)
View(atvi_ts)
atvi_ts$ATVI.Close
atvi_ts[3,]
atvi_ts[,3]
getSymbols("ATVI", src = "yahoo")
atvi <- as.data.frame(ATVI)
data <- data.frame(dates = as.Date(row.names(atvi)), atvi = atvi[,1])
attach(data)
atvi_ts <- ts(atvi, start = 2007, end = 2018.4, freq = 255)
atvi_closedP_ts <- atvi_ts[,4]
atvi_closedP_ts <- atvi_closedP_ts[1:length(data$atvi)]
acf(atvi_ts, main = "ACF of the Activision Blizzard's stock price")
pacf(atvi_ts, main = "PACF of the Activision Blizzard's stock price")
acf(atvi_closedP_ts, main = "ACF of the Activision Blizzard's stock price")
pacf(atvi_closedP_ts, main = "PACF of the Activision Blizzard's stock price")
ar2 = arima(atvi_closedP_ts, c(2,1,0))
acf(ar2)
#***********************************************
# Randall R. Rojas
# Email: rrojas@econ.ucla.edu
# Date: 04/26/2015
# Comment(s): R fiting ARMA(p,q) models to data
# Data File(s): caemp.txt
#***********************************************
# Variable Definitions
# Canadian Employment Index (quarterly, seasonally adjusted starting from 1962)
#************************************************
# Set your 'working directory' to the folder where all the data and respective codes are located.
setwd("C:/Users/Xiang/OneDrive/Desktop/Econ-144/Week 5")
# Clear all variables and prior sessions
rm(list=ls(all=TRUE))
# Load Libraries
library(lattice)
library(foreign)
library(MASS)
library(car)
require(stats)
require(stats4)
library(KernSmooth)
library(fastICA)
library(cluster)
library(leaps)
library(mgcv)
library(rpart)
library(pan)
library(mgcv)
library(DAAG)
library("TTR")
library(tis)
require("datasets")
require(graphics)
library("forecast")
#install.packages("astsa")
#require(astsa)
library(xtable)
# New libraries added:
library(stats)
library(TSA)
library(timeSeries)
library(fUnitRoots)
library(fBasics)
library(tseries)
library(timsac)
library(TTR)
library(fpp)
#NOTE: to add recession bands:
# Example: Presidents approval rating
#plot(presidents, type='n', ylab="Presidents approval rating")
#nberShade()
#lines(presidents)
# Read in the data into a ts data file:
caemp=read.table("caemp.txt")
caemp_ts<-ts(caemp,start=1962.1,freq=4)
windows()
plot(caemp_ts,xlab='Year', ylab="Canadian Employment", lwd=2)
grid()
# Look at the correlogram
windows()
par(mfrow=c(3,1))
acf(caemp_ts, type = "covariance", main="Autocovariance",lag.max=50, ylab="COV")
acf(caemp_ts, type = "correlation", main="Autocorrelation",lag.max=50,ylab="ACF")
acf(caemp_ts, type = "partial",main="Partial Autocorrelation",lag.max=50, ylab="PACF")
# The plots show evidence of serial corrleation --> cycles
# ACF plot: High during business cylce booms, and low during recessions.
# For further discussion read pages 130-132 of the textbook.
# Test the white noise Ho:
acf_val=acf(caemp_ts)$acf
Box.test(acf_val, type = "Ljung-Box")
Box.test(acf_val, type = "Box-Pierce")
#Sometimes low order ARMA is better that high order AR or MA
# MA(q) Model Fitting (see page 155)
ma1=arma(caemp_ts,order=c(0,1)) #Same as MA(1) = AR(0) + MA(1)
summary(ma1)
ma2=arma(caemp_ts,order=c(0,2)) #Same as MA(2) = AR(0) + MA(2)
summary(ma2)
ma3=arma(caemp_ts,order=c(0,10)) #Same as MA(10) = AR(0) + MA(10)
summary(ma3)
#plot(ma3)
# Look at all the MA(q) fits
windows()
plot(caemp_ts,xlab='Year', ylab="Canadian Employment", lwd=2)
grid()
lines(ma1$fitted.values,col="blue",lwd=2)
lines(ma2$fitted.values,col="seagreen2",lwd=2)
lines(ma3$fitted.values,col="red",lwd=2)
legend("topright",legend=c("Data","MA(10)","MA(2)","MA(1)"),text.col=1:4,bty="n")
# Examine the best fit MA(q) model
windows()
par(mfrow=c(2,2))
plot(caemp_ts,xlab='Year', ylab="Canadian Employment", lwd=2)
lines(ma3$fitted.values,col="red",lwd=1,lty=1)
plot(ma3$residuals,ylab="Residuals")
acf(ma3$residuals[12:136], type = "correlation", main="Autocorrelation",lag.max=13,ylab="ACF")
acf(ma3$residuals[12:136], type = "partial",main="Partial Autocorrelation",lag.max=13, ylab="PACF")
# Overall, even with the high q-order, the MA(q) model is not that good!
# AR(p) Model Fitting (see page 157)
ar1=ar(caemp_ts,FALSE,1) #Same as AR(1), FALSE is needed to allow for different values of p
ar1
ar2=ar(caemp_ts,FALSE,2) #Same as AR(2), Note: if no set FALSE, it will figure the best order (p)
ar2
ar3=ar(caemp_ts,FALSE,3) #Same as AR(3)
ar3
# You can also use ARMA(p,q) but setting q=0 this time.
ar1=arma(caemp_ts,order=c(1,0)) #Same as AR(1) = AR(1) + MA(0)
summary(ar1)
ar2=arma(caemp_ts,order=c(2,0)) #Same as AR(2) = AR(2) + MA(0)
summary(ar2)
ar3=arma(caemp_ts,order=c(3,0)) #Same as AR(3) = AR(3) + MA(0)
summary(ar3)
#plot(ar2)
# Look at all the AR(p) fits
windows()
plot(caemp_ts,xlab='Year', ylab="Canadian Employment", lwd=2)
grid()
lines(ar1$fitted.values,col="blue",lwd=2,lty=2)
lines(ar2$fitted.values,col="seagreen2",lwd=2,lty=2)
lines(ar3$fitted.values,col="red",lwd=2,lty=2)
legend("topright",legend=c("Data","AR(3)","AR(2)","AR(1)"),text.col=1:4,bty="n")
# Examine the best fit AR(p) model
windows()
par(mfrow=c(2,2))
plot(caemp_ts,xlab='Year', ylab="Canadian Employment", lwd=2)
lines(ar2$fitted.values,col="red",lwd=1,lty=1)
plot(ar2$residuals,ylab="Residuals")
acf(ar2$residuals[3:136], type = "correlation", main="Autocorrelation",lag.max=13,ylab="ACF")
acf(ar2$residuals[3:136], type = "partial",main="Partial Autocorrelation",lag.max=13, ylab="PACF")
# We can see a significant improvement e.g., from looking at the ACF and PACF plots, the
# residuals now look consistent with noise, suggesting we accounted for most (or all) of
# the dynamics left after detrending and seasonally adjusting the data.
# NOTE: With AR we only need p=2 unlike MA which required a much higher order polynomial.
# ARMA(p,q) Model Fitting (see page 157)
arma1=arma(caemp_ts,order=c(1,1)) # AR(1) + MA(1)
summary(arma1)
arma2=arma(caemp_ts,order=c(1,2)) # AR(1) + MA(2)
summary(arma2)
arma3=arma(caemp_ts,order=c(2,1)) # AR(2) + MA(1)
summary(arma3)
arma4=arma(caemp_ts,order=c(2,2)) # AR(2) + MA(2)
summary(arma4)
#plot(ar2)
# Look at all the ARMA(p,q) fits
windows()
plot(caemp_ts,xlab='Year', ylab="Canadian Employment", lwd=2)
grid()
lines(arma1$fitted.values,col="blue",lwd=2,lty=2)
lines(arma2$fitted.values,col="seagreen2",lwd=2,lty=2)
lines(arma3$fitted.values,col="red",lwd=2,lty=2)
legend("topright",legend=c("Data","ARMA(2,1)","ARMA(1,2)","ARMA(1,1)"),text.col=1:4,bty="n")
# Examine the best fit AR(p) model
windows()
par(mfrow=c(2,2))
plot(caemp_ts,xlab='Year', ylab="Canadian Employment", lwd=2)
lines(arma3$fitted.values,col="red",lwd=1,lty=1)
plot(arma3$residuals,ylab="Residuals")
acf(arma3$residuals[3:136], type = "correlation", main="Autocorrelation",lag.max=13,ylab="ACF")
acf(arma3$residuals[3:136], type = "partial",main="Partial Autocorrelation",lag.max=13, ylab="PACF")
# Simulate AR(p), MA(q), and ARMA(p,q) process and test the theory :)
# 1. Simulate an MA(2) process. Accroding to theory, the ACF cuts-off at lag=2
ma.sim<-arima.sim(model=list(ma=c(-.7,.1)),n=1000) #Note: 'ma' has 2 coefficients, hence MA(2)
windows()
par(mfrow=(c(2,1)))
plot(ma.sim)
acf(ma.sim)
# 2. Simulate an AR(4) process. Accroding to theory, the PACF cuts-off at lag=4
ar.sim<-arima.sim(model=list(ar=c(.9,-.2,-.8,0.5)),n=10000) #Note: 'ar' has 2 coefficients, hence AR(4)
windows()
par(mfrow=c(2,1))
plot(ar.sim)
pacf(ar.sim)
# 2. Simulate an ARMA(2,2) process. According to theory,...??
#if the value for the ARMA are comparable, then it would be hard to identify because
#there are other dynamics that come in
arma.sim<-arima.sim(model=list(ar=c(.9,-.2),ma=c(-.7,.1)),n=10000)
windows()
par(mfrow=c(3,1))
plot(arma.sim)
acf(arma.sim)
pacf(arma.sim)
arma.sim
plot(atvi_closedP_ts)
getSymbols("ATVI", src = "yahoo")
atvi <- as.data.frame(ATVI)
data <- data.frame(dates = as.Date(row.names(atvi)), atvi = atvi[,1])
attach(data)
atvi_ts <- ts(atvi, start = 2007, end = 2018.4, freq = 255)
atvi_closedP_ts <- atvi_ts[,4]
atvi_closedP_ts <- atvi_closedP_ts[1:length(data$atvi)]
help(Arime)
help(Arima)
