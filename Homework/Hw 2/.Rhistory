y1 = lm(female_ts~t)
matplot(t, cbind(y1$fitted.values, female_ts), xlab = "Time", ylab = "Values",  type="l", lwd=2, col = c("black", "blue"))
title(main = "Linear model")
legend("topleft", legend=c("Regression Fitted Values", "Time Series"),
col=c("black", "blue"), cex=0.8, lty = 1)
#Quadratic Model
y2 = lm(female_ts~t+I(t^2))
matplot(t, cbind(y2$fitted.values, female_ts), xlab = "Time", ylab = "Values",  type="l", lwd=2, col = c("black", "blue"))
title(main = "Quadratic model")
legend("topleft", legend=c("Regression Fitted Values", "Time Series"),
col=c("black", "blue"), cex=0.8, lty = 1)
#Exponential Model
ds=data.frame(x=t, y=female_ts)
#using a nonlinear square
y3=nls(y ~ exp(a + b * t),data=ds, start = list(a = 0, b = 0))
matplot(t, cbind(predict(y3, list(x = ds$x)), female_ts), xlab = "Time", ylab = "Values",  type="l", lwd=2, col = c("black", "blue"))
title(main = "Exponential model")
legend("topleft", legend=c("Regression Fitted Values", "Time Series"),
col=c("black", "blue"), cex=0.8, lty = 1)
plot(y1$fitted.values, y1$residuals, main = "Linear:Residual vs Fitted Values", xlab = "Residuals", ylab = "Fitted values")
plot(y2$fitted.values, y2$residuals, main = "Quadratic:Residual vs Fitted Values", xlab = "Residuals", ylab = "Fitted values")
plot(predict(y3, list(x, ds$x)), y3$residuals, main = "Quadratic:Residual vs Fitted Values", xlab = "Residuals", ylab = "Fitted values")
plot(y1$fitted.values, y1$residuals, main = "Linear:Residual vs Fitted Values", xlab = "Residuals", ylab = "Fitted values")
plot(y2$fitted.values, y2$residuals, main = "Quadratic:Residual vs Fitted Values", xlab = "Residuals", ylab = "Fitted values")
plot(predict(y3, list(x, ds$x)), residuals(y3), main = "Exponential:Residual vs Fitted Values", xlab = "Residuals", ylab = "Fitted values")
plot(y1$fitted.values, y1$residuals, main = "Linear:Residual vs Fitted Values", xlab = "Residuals", ylab = "Fitted values")
plot(y2$fitted.values, y2$residuals, main = "Quadratic:Residual vs Fitted Values", xlab = "Residuals", ylab = "Fitted values")
plot(predict(y3, list(x = ds$x)), residuals(y3), main = "Exponential:Residual vs Fitted Values", xlab = "Residuals", ylab = "Fitted values")
plot(y1$fitted.values, y1$residuals, main = "Linear:Residual vs Fitted Values", ylab = "Residuals", xlab = "Fitted values")
plot(y2$fitted.values, y2$residuals, main = "Quadratic:Residual vs Fitted Values", ylab = "Residuals", xlab = "Fitted values")
plot(predict(y3, list(x = ds$x)), residuals(y3), main = "Exponential:Residual vs Fitted Values", ylab = "Residuals", xlab = "Fitted values")
AIC(y1,y2,y3)
BIC(y1,y2,y3)
#Plotting the graph with the 95% confidence and prediction intervals
tn=data.frame(t=seq(1992,2002))
pred=predict(lm(female_ts ~ t), tn, se.fit = TRUE)
#plot(c(male_ts,pred$fit),type='l',xlim=c(1940,2000))
pred.plim = predict(lm(male_ts ~ t),tn, level =0.95, interval="prediction")
pred.clim = predict(lm(male_ts ~ t), tn,level=0.95, interval="confidence")
matplot(tn$t,cbind(pred.clim, pred.plim[,-1]),
lty=c(1,1,1,3,3), type="l", lwd=2, ylab="predicted y",xlab="Time")
#Plotting the graph with the 95% confidence and prediction intervals
tn=data.frame(t=seq(1992,2002))
pred=predict(lm(female_ts ~ t), tn, se.fit = TRUE)
#plot(c(male_ts,pred$fit),type='l',xlim=c(1940,2000))
pred.plim = predict(lm(male_ts ~ t),tn, level =0.95, interval="prediction")
pred.clim = predict(lm(male_ts ~ t), tn,level=0.95, interval="confidence")
matplot(tn$t,cbind(pred.clim, pred.plim[,-1]),
lty=c(1,1,1,3,3), type="l", lwd=2, ylab="predicted y",xlab="Time", col =         c("black", "blue", "red", "blue","black"))
#Plotting the graph with the 95% confidence and prediction intervals
tn=data.frame(t=seq(1992,2002))
pred=predict(lm(female_ts ~ t), tn, se.fit = TRUE)
#plot(c(male_ts,pred$fit),type='l',xlim=c(1940,2000))
pred.plim = predict(lm(male_ts ~ t),tn, level =0.95, interval="prediction")
pred.clim = predict(lm(male_ts ~ t), tn,level=0.95, interval="confidence")
matplot(tn$t,cbind(pred.clim, pred.plim[,-1]),
lty=c(1,1,1,3,3), type="l", lwd=2, ylab="predicted y",xlab="Time", col =         c("black", "black", "blue", "blue","red"))
pred.clim
#Plotting the graph with the 95% confidence and prediction intervals
tn=data.frame(t=seq(1992,2002))
pred=predict(lm(female_ts ~ t), tn, se.fit = TRUE)
#plot(c(male_ts,pred$fit),type='l',xlim=c(1940,2000))
pred.plim = predict(lm(male_ts ~ t),tn, level =0.95, interval="prediction")
pred.clim = predict(lm(male_ts ~ t), tn,level=0.95, interval="confidence")
matplot(tn$t,cbind(pred.clim, pred.plim[,-1]),
lty=c(1,1,1,3,3), type="l", lwd=2, ylab="predicted y",xlab="Time", col =         c("red", "black", "black", "blue","blue"))
#Plotting the graph with the 95% confidence and prediction intervals
tn=data.frame(t=seq(1992,2002))
pred=predict(lm(female_ts ~ t), tn, se.fit = TRUE)
#plot(c(male_ts,pred$fit),type='l',xlim=c(1940,2000))
pred.plim = predict(lm(male_ts ~ t),tn, level =0.95, interval="prediction")
pred.clim = predict(lm(male_ts ~ t), tn,level=0.95, interval="confidence")
matplot(tn$t,cbind(pred.clim, pred.plim[,-1]),
lty=c(1,2,2,3,3), type="l", lwd=2, ylab="predicted y",xlab="Time", col =         c("red", "black", "black", "blue","blue"))
title(main = "Predicted value vs Time")
legend("topright", legend = c("Prediction interval", "Confidence Interval", "Forecasted fit"), lty = c(3,2,1), col = c("blue", "black", "red"))
#Plotting the graph with the 95% confidence and prediction intervals
tn=data.frame(t=seq(1992,2002))
pred=predict(lm(female_ts ~ t), tn, se.fit = TRUE)
#plot(c(male_ts,pred$fit),type='l',xlim=c(1940,2000))
pred.plim = predict(lm(female_ts ~ t),tn, level =0.95, interval="prediction")
pred.clim = predict(lm(female_ts ~ t), tn,level=0.95, interval="confidence")
matplot(tn$t,cbind(pred.clim, pred.plim[,-1]),
lty=c(1,2,2,3,3), type="l", lwd=2, ylab="predicted y",xlab="Time", col =         c("red", "black", "black", "blue","blue"))
title(main = "Predicted value vs Time")
legend("topright", legend = c("Prediction interval", "Confidence Interval", "Forecasted fit"), lty = c(3,2,1), col = c("blue", "black", "red"))
fit_hw = HoltWinters(female_ts)
hwpred = predict(fit_hw, ahead = 120, prediction.interval = T, level = 0.5)
plot(fit_hw, hwpred)
lines(predict(hwfit,n.ahead=120),lwd=1.5, col='blue')
lines(predict(fit_hw,n.ahead=120),lwd=1.5, col='blue')
plot(fit_hw, hwpred)
lines(predict(fit_hw,n.ahead=120),lwd=1.5, col='blue')
plot(fit_hw,ylab="Participation Rate (Male)", xlab="Time", lwd=1, col='black',xlim=c(1948,1999))
lines(predict(fit_hw,n.ahead=60),lwd=1.5, col='blue')
fit_hw = HoltWinters(female_ts)
hwpred = predict(fit_hw, ahead = 120, prediction.interval = T, level = 0.5)
plot(fit_hw,ylab="Participation Rate (Male)", xlab="Time", lwd=1, col='black',xlim=c(1948,1999))
plot(fit_hw,ylab="Participation Rate (Male)", xlab="Time", lwd=1, col='black',xlim=c(1948,1999))
lines(predict(fit_hw,n.ahead=120),lwd=1.5, col='blue')
lines(predict(fit_hw,n.ahead=60),lwd=1.5, col='blue')
plot(forecast(fit_hw, ahead = 120),ylab="Participation Rate (Male)", xlab="Time", lwd=1, col='black')
lines(predict(fit_hw,n.ahead=120),lwd=1.5, col='blue')
lines(predict(fit_hw,n.ahead=60),lwd=1.5, col='blue')
plot(forecast(fit_hw, ahead = 120),ylab="Participation Rate (Male)", xlab="Time", lwd=1, col='black')
plot(forecast(fit_hw, ahead = 240),ylab="Participation Rate (Male)", xlab="Time", lwd=1, col='black')
plot(predict(fit_hw, ahead = 240),ylab="Participation Rate (Male)", xlab="Time", lwd=1, col='black')
plot(predict(fit_hw, ahead = 240),ylab="Participation Rate (Male)", xlab="Time", lwd=1, col='black')
plot(fit_hw,ylab="Participation Rate (Male)", xlab="Time", lwd=1, col='black')
fit_hw = HoltWinters(female_ts)
hwpred = predict(fit_hw, ahead = 120, prediction.interval = T, level = 0.5)
plot(fit_hw, hwpred, ylab="Participation Rate (Male)", xlab="Time", lwd=1, col='black',xlim=c(1948,1999))
plot(fit_hw, hwpred, ylab="Participation Rate (Male)", xlab="Time", lwd=1, col='black')
plot(hwpred, ylab="Participation Rate (Male)", xlab="Time", lwd=1, col='black')
plot(forecast(hw_fit), plot.conf = TRUE, shaded = TRUE)
fit_hw = HoltWinters(female_ts)
hwpred = predict(fit_hw, ahead = 120, prediction.interval = T, level = 0.5)
plot(fit_hw, hwpred, ylab="Participation Rate (Male)", xlab="Time", lwd=1, col='black',xlim=c(1948,1999))
plot(forecast(fit_hw), plot.conf = TRUE, shaded = TRUE)
plot.forecast(fit_hw, plot.conf = TRUE, shaded = TRUE, shadecols="oldstyle")
plot(forecast(fit_hw), shaded = TRUE, shadecols="oldstyle")
pred_hw=predict(fit_hw$fitted.values, tn, se.fit = TRUE)
length(fit_hw$fitted.values)
predict(fit_hw)
pred_hw=predict(fit_hw, tn, se.fit = TRUE)
pred_hw=predict(fit_hw, 120, se.fit = TRUE)
pred_hw.plim = predict(fit_hw$fitted.values,tn, level =0.95, interval="prediction")
pred_hw=predict(fit_hw, 120, se.fit = TRUE)
pred_hw.plim = predict(fit_hw,120, level =0.95, interval="prediction")
plot(pred_hw.plim[1], shaded = TRUE, shadecols="oldstyle")
pred_hw=predict(fit_hw, 120, se.fit = TRUE)
pred_hw.plim = predict(fit_hw,120, level =0.95, interval="prediction")
plot(pred_hw.plim[1])
pred_hw.plim
pred_hw=predict(fit_hw, 120, se.fit = TRUE)
pred_hw.plim = predict(fit_hw,120, level =0.95, interval="prediction")
plot(pred_hw.plim)
pred_hw.plim
pred_hw=predict(fit_hw, tn, se.fit = TRUE)
pred_hw=predict(fit_hw, 120, interval="prediction", level =0.95)
plot(pred_hw)
pred_hw=predict(fit_hw, 120, prediction.interval=T, level =0.95)
plot(pred_hw)
pred_hw=predict(fit_hw, 120, prediction.interval=T, level =0.95)
matplot(cbind(pred_hw))
pred_hw=predict(fit_hw, 120, prediction.interval=T, level =0.95)
matplot(cbind(pred_hw), lty = 1:3, col = c("black", "blue", "blue"))
title(main = "Plot of forecasted Holt-Winter")
pred_hw=predict(fit_hw, 120, prediction.interval=T, level =0.95)
matplot(cbind(pred_hw), lty = 1:3, col = c("black", "blue", "blue"), type = "l", lty = 1:2)
pred_hw=predict(fit_hw, 120, prediction.interval=T, level =0.95)
matplot(cbind(pred_hw), lty = 1:3, col = c("black", "blue", "blue"), type = "l", lty = c(1,2,2))
pred_hw=predict(fit_hw, 120, prediction.interval=T, level =0.95)
matplot(cbind(pred_hw), col = c("black", "blue", "blue"), type = "l", lty = c(1,2,2))
title(main = "Plot of forecasted Holt-Winter")
pred_hw=predict(fit_hw, 120, prediction.interval=T, level =0.95)
matplot(cbind(pred_hw), col = c("black", "blue", "blue"), type = "l", lty = c(1,2,2))
title(main = "Plot of forecasted Holt-Winter")
legend("topleft", legend=c("Forecasted fit", "Interval"), type = "l", lty = c(1,2), col = c("black", "blue"))
pred_hw=predict(fit_hw, 120, prediction.interval=T, level =0.95)
matplot(cbind(pred_hw), col = c("black", "blue", "blue"), type = "l", lty = c(1,2,2))
title(main = "Plot of forecasted Holt-Winter")
legend("topleft", legend=c("Forecasted fit", "Interval"), lty = c(1,2), col = c("black", "blue"))
pred_hw=predict(fit_hw, 120, prediction.interval=T, level =0.95)
matplot(tn$t, cbind(pred_hw), col = c("black", "blue", "blue"), type = "l", lty = c(1,2,2))
length(tn$t)
pred_hw
pred_hw=predict(fit_hw, 144, prediction.interval=T, level =0.95)
t2 = seq(start = 1991, end = 2002, length = length(pred_hw[1]))
matplot(t2, cbind(pred_hw), col = c("black", "blue", "blue"), type = "l", lty = c(1,2,2))
lengtht2
length(t2)
pred_hw=predict(fit_hw, 144, prediction.interval=T, level =0.95)
t2 = seq(start = 1991, end = 2002, length = length(pred_hw))
matplot(t2, cbind(pred_hw), col = c("black", "blue", "blue"), type = "l", lty = c(1,2,2))
length(t2)
length(pred_hw)
pred_hw
pred_hw[:,1]
pred_hw[,1]
pred_hw=predict(fit_hw, 144, prediction.interval=T, level =0.95)
t2 = seq(start = 1991, end = 2002, length = length(pred_hw[,1]))
matplot(t2, cbind(pred_hw), col = c("black", "blue", "blue"), type = "l", lty = c(1,2,2))
title(main = "Plot of forecasted Holt-Winter")
legend("topleft", legend=c("Forecasted fit", "Interval"), lty = c(1,2), col = c("black", "blue"))
t2 = seq(start = 1991, end = 2002, length = length(pred_hw[,1]))
t2 = seq(start = 1991, end = 2003, length = length(pred_hw[,1]))
pred_hw[,1]
length(pred_hw[,1])
seq(from = 1991, to = 2002, length = length(pred_hw[,1]))
pred_hw=predict(fit_hw, 144, prediction.interval=T, level =0.95)
t2 = seq(from = 1991, to = 2002, length = length(pred_hw[,1]))
matplot(t2, cbind(pred_hw), col = c("black", "blue", "blue"), type = "l", lty = c(1,2,2))
title(main = "Plot of forecasted Holt-Winter")
legend("topleft", legend=c("Forecasted fit", "Interval"), lty = c(1,2), col = c("black", "blue"))
pred_hw=predict(fit_hw, 144, prediction.interval=T, level =0.95)
t2 = seq(from = 1991, to = 2002, length = length(pred_hw[,1]))
matplot(t2, cbind(pred_hw), col = c("black", "blue", "blue"), type = "l", lty = c(1,2,2), xlab = "Time", ylab = "Forecasted value+Prediction Interval")
title(main = "Plot of forecasted Holt-Winter")
legend("topleft", legend=c("Forecasted fit", "Interval"), lty = c(1,2), col = c("black", "blue"))
rm(list=ls(all=T))
data = read.csv("3.2.csv")
attach(data)
month_inf = log(diff(cpi))
ex_post_IR = nomrate - month_inf
length(ex_post_IR)
month_inf = diff(log(cpi))
ex_post_IR = nomrate - month_inf
data1 = read.csv("3.1.csv", header = T)
attach(data1)
rpce_pctchg = diff(log(rpce))
rdpi_pctchg = diff(log(rdpi))
y = lm(rpce_pctchg~rdpi_pctchg+ex_post_IR)
length(rpce_pctchg)
length(rdpi_pctchg)
length(ex_post_IR)
data1 = read.csv("3.1.csv", header = T)
attach(data1)
rpce_pctchg = diff(log(rpce))
rdpi_pctchg = diff(log(rdpi))
y = lm(rpce_pctchg~rdpi_pctchg+ex_post_IR[-length(ex_post_IR)])
summary(y)
length(ex_post_IR[-length(ex_post_IR)])
ex_post_IR[-length(ex_post_IR)]
ex_post_IR
data1 = read.csv("3.1.csv", header = T)
attach(data1)
rpce_pctchg = diff(log(rpce))
rdpi_pctchg = diff(log(rdpi))
y = lm(rpce_pctchg~rdpi_pctchg+ex_post_IR[-length(ex_post_IR)])
summary(y)
rm(list=ls(all=T))
data = read.csv("4.4.csv")
attach(data)
rm(list=ls(all=T))
data = read.csv("4.4.csv")
names(data) = c("time", "house_price", "interest_rate")
attach(data)
hp_lag1 = append(NA, house_price[-length(house_price)])
hp_lag2 = append(NA, house_price[-c(length(house_price)-1, length(house_price))])
hp_lag2
length(hp_lag1)
length(hp_lag2)
hp_lag1 = append(NA, house_price[-length(house_price)])
hp_lag2 = append(NA, NA, house_price[-c(length(house_price)-1, length(house_price))])
hp_lag2
hp_lag1 = append(NA, house_price[-length(house_price)])
hp_lag2 = append(c(NA, NA), house_price[-c(length(house_price)-1, length(house_price))])
hp_lag2
hp_lag1
hp_lag1 = append(NA, house_price[-length(house_price)])
hp_lag2 = append(c(NA, NA), house_price[-c(length(house_price)-1, length(house_price))])
hp_lag3 = append(c(NA,NA,NA), house_price[-c(length(house_price)-2, length(house_price)-1, length(house_price))])
hp_lag3 = append(c(NA,NA,NA,NA), house_price[-c(length(house_price)-3, length(house_price)-2, length(house_price)-1, length(house_price))])
hp_lag1 = append(NA, house_price[-length(house_price)])
hp_lag2 = append(c(NA, NA), house_price[-c(length(house_price)-1, length(house_price))])
hp_lag3 = append(c(NA,NA,NA), house_price[-c(length(house_price)-2, length(house_price)-1, length(house_price))])
hp_lag4 = append(c(NA,NA,NA,NA), house_price[-c(length(house_price)-3, length(house_price)-2, length(house_price)-1, length(house_price))])
y1 = lm(house_price~hp_lag1)
summary(y1)
y2 = lm(house_price~hp_lag1+hp_lag2)
summary(y2)
y3 = lm(house_price~hp_lag1+hp_lag2+hp_lag3)
summary(y3)
y4 = lm(house_price~hp_lag1+hp_lag2+hp_lag3+hp_lag4)
summary(y4)
rm(list=ls(all=T))
data = read.csv("4.41.csv")
names(data) = c("data", "actual_rgdp_growth", "actual_greenbook_growth")
attach(data)
forecast_err = actual_rgdp_growth-actual_greenbook_growth
realized_ts = ts(actual_rgdp_growth, start = 1969, freq = 4)
forecast_ts = ts(actual_greenbook_growth, start = 1969, freq = 4)
forecast_error_ts = ts(forecast_err, start = 1969, freq = 4)
plot(realized_ts, main = "Plot of realized values")
plot(forecast_ts, main = "Plot of forecasted values")
plot(forecast_error_ts, main = "Plot of forecasted errors")
summary(realized_ts)
summary(forecast_ts)
summary(realized_error_ts)
summary(realized_ts)
summary(forecast_ts)
summary(realized_err_ts)
summary(realized_ts)
summary(forecast_ts)
summary(forecast_error_ts)
summary(realized_ts)
summary(forecast_ts)
summary(forecast_error_ts)
summary(realized_ts)
summary(forecast_ts)
summary(forecast_error_ts)
boxplot(realized_ts, forecast_ts, forecast_error_ts, main = "The boxplots of the realized values, /n forecasted values and forecasted error")
summary(realized_ts)
summary(forecast_ts)
summary(forecast_error_ts)
boxplot(realized_ts, forecast_ts, forecast_error_ts, main = "The boxplots of the realized values, \n forecasted values and forecasted error")
acf(realized_ts)
pacf(realized_ts)
acf(forecast_ts)
pacf(forecast_ts)
acf(forecast_error_ts)
pacf(forecast_error_ts)
Box.test(forecast_ts, type = c("Box-Pierce", "Ljung-Box"))
Box.test(forecast_ts, lag = 2, type = c("Box-Pierce", "Ljung-Box"))
acf(realized_ts)
pacf(realized_ts)
acf(forecast_ts)
pacf(forecast_ts)
acf(forecast_error_ts)
pacf(forecast_error_ts)
for (i in 2010:2015){
print(paste("The year is", year))
}
acf(realized_ts)
pacf(realized_ts)
acf(forecast_ts)
pacf(forecast_ts)
acf(forecast_error_ts)
pacf(forecast_error_ts)
for (i in 1:5){
Box.test(forecast_ts, lag = i, type = c("Box-Pierce", "Ljung-Box"))
}
//
acf(realized_ts)
pacf(realized_ts)
acf(forecast_ts)
pacf(forecast_ts)
acf(forecast_error_ts)
pacf(forecast_error_ts)
for (i in 1:5){
Box.test(forecast_ts, lag = i, type = c("Box-Pierce", "Ljung-Box"))
}
acf(realized_ts)
pacf(realized_ts)
acf(forecast_ts)
pacf(forecast_ts)
acf(forecast_error_ts)
pacf(forecast_error_ts)
for (i in 1:5){
print(Box.test(forecast_ts, lag = i, type = c("Box-Pierce", "Ljung-Box")))
}
for (i in 1:5){
print(Box.test(forecast_ts, lag = i, type = "Ljung-Box"))
}
for (i in 1:20){
print(Box.test(forecast_ts, lag = i, type = "Ljung-Box"))
}
acf(realized_ts)
pacf(realized_ts)
acf(forecast_ts)
pacf(forecast_ts)
acf(forecast_error_ts)
pacf(forecast_error_ts)
for (i in 1:20){
print(Box.test(forecast_ts, lag = i, type = "Ljung-Box"))
}
knitr::opts_chunk$set(echo = TRUE)
rm(ls=list(all=T))
rm(list=ls(all=T))
data = read.csv("5.4.csv")
attach(data)
rm(list=ls(all=T))
data = read.csv("5.4.csv")
attach(data)
data$X = NULL
names(data)=c("data_AMEX", "AMEX", "data_SP500", "SP500")
AMEX_diff = diff(AMEX)
rm(list=ls(all=T))
data = read.csv("5.4.csv")
attach(data)
data$X = NULL
names(data)=c("data_AMEX", "AMEX", "data_SP500", "SP500")
AMEX_diff = diff(AMEX)
rm(list=ls(all=T))
data = read.csv("5.4.csv")
data$X = NULL
names(data)=c("data_AMEX", "AMEX", "data_SP500", "SP500")
attach(data)
AMEX_diff = diff(AMEX)
SP500_diff = diff(SP500)
#y1 = time series for AMEX and y2 = time series for SP500
y1 = ts(AMEX_diff, start=502989/252, freq = 252)
y2 = ts(SP500_diff, start = 501493/252, freq = 252)
y1
plot(y1)
plot(y2)
ACF(y1)
acf(y1)
AMEX_diff = diff(AMEX)
SP500_diff = diff(SP500)
#y1 = time series for AMEX and y2 = time series for SP500
y1 = ts(AMEX_diff, start=502989/252, freq = 252)
y2 = ts(SP500_diff, start = 501493/252, freq = 252)
acf(y1)
y1
y2
plot(y1)
y1[length(y1)]
y1[length(y1)-1]
y1[length(y1)-1]
y1[complete.cases(y1)]
AMEX_diff = diff(AMEX)
SP500_diff = diff(SP500)
#y1 = time series for AMEX and y2 = time series for SP500
y1 = ts(AMEX_diff, start=502989/252, freq = 252)
y2 = ts(SP500_diff, start = 501493/252, freq = 252)
#need to get rid of the NA's in the y1 data
y1 = y1[complete.cases(y1)]
acf(y1)
pacf(y1)
acf(y2)
pacf(y2)
AMEX_diff = diff(AMEX)
SP500_diff = diff(SP500)
#y1 = time series for AMEX and y2 = time series for SP500
y1 = ts(AMEX_diff, start=502989/252, freq = 252)
y2 = ts(SP500_diff, start = 501493/252, freq = 252)
#need to get rid of the NA's in the y1 and y2 data
y1 = y1[complete.cases(y1)]
y2 = y2[complete.cases(y2)]
acf(y1)
pacf(y1)
acf(y2)
pacf(y2)
AMEX_diff = diff(AMEX)
SP500_diff = diff(SP500)
#y1 = time series for AMEX and y2 = time series for SP500
y1 = ts(AMEX_diff, start=1995+(249/252), freq = 252)
y2 = ts(SP500_diff, start = 1990+(13/252), freq = 252)
#need to get rid of the NA's in the y1 and y2 data
y1 = y1[complete.cases(y1)]
y2 = y2[complete.cases(y2)]
acf(y1)
pacf(y1)
acf(y2)
pacf(y2)
acf(realized_ts)
rm(list=ls(all=T))
data = read.csv("4.41.csv")
names(data) = c("data", "actual_rgdp_growth", "actual_greenbook_growth")
attach(data)
forecast_err = actual_rgdp_growth-actual_greenbook_growth
realized_ts = ts(actual_rgdp_growth, start = 1969, freq = 4)
forecast_ts = ts(actual_greenbook_growth, start = 1969, freq = 4)
forecast_error_ts = ts(forecast_err, start = 1969, freq = 4)
plot(realized_ts, main = "Plot of realized values")
plot(forecast_ts, main = "Plot of forecasted values")
plot(forecast_error_ts, main = "Plot of forecasted errors")
summary(realized_ts)
summary(forecast_ts)
summary(forecast_error_ts)
boxplot(realized_ts, forecast_ts, forecast_error_ts, main = "The boxplots of the realized values, \n forecasted values and forecasted error")
acf(realized_ts)
pacf(realized_ts)
acf(forecast_ts)
pacf(forecast_ts)
acf(forecast_error_ts)
pacf(forecast_error_ts)
for (i in 1:20){
print(Box.test(realized_ts, lag = i, type = "Ljung-Box"))
}
for (i in 1:20){
print(Box.test(forecast_ts, lag = i, type = "Ljung-Box"))
}
for (i in 1:20){
print(Box.test(forecast_error_ts, lag = i, type = "Ljung-Box"))
}
rm(list=ls(all=T))
data = read.csv("3.2.csv")
attach(data)
View(data)
View(data)
y1 = lm(house_price~hp_lag1)
rm(list=ls(all=T))
data = read.csv("4.4.csv")
names(data) = c("time", "house_price", "interest_rate")
attach(data)
hp_lag1 = append(NA, house_price[-length(house_price)])
hp_lag2 = append(c(NA, NA), house_price[-c(length(house_price)-1, length(house_price))])
hp_lag3 = append(c(NA,NA,NA), house_price[-c(length(house_price)-2, length(house_price)-1, length(house_price))])
hp_lag4 = append(c(NA,NA,NA,NA), house_price[-c(length(house_price)-3, length(house_price)-2, length(house_price)-1, length(house_price))])
house_price_ts = ts(house_price, start=1980+(1/4), freq=4)
hp_lag1k = lag(house_price_ts,1)
hp_lag2k = lag(house_price_ts,2)
y1 = lm(house_price~hp_lag1)
summary(y1)
y2 = lm(house_price~hp_lag1+hp_lag2)
summary(y2)
y3 = lm(house_price~hp_lag1+hp_lag2+hp_lag3)
summary(y3)
y4 = lm(house_price~hp_lag1+hp_lag2+hp_lag3+hp_lag4)
summary(y4)
y5 = lm(house_price_ts~hp_lag1k+hp_lag2k)
summary(y5)
hp_lag1 = append(NA, house_price[-length(house_price)])
hp_lag2 = append(c(NA, NA), house_price[-c(length(house_price)-1, length(house_price))])
hp_lag3 = append(c(NA,NA,NA), house_price[-c(length(house_price)-2, length(house_price)-1, length(house_price))])
hp_lag4 = append(c(NA,NA,NA,NA), house_price[-c(length(house_price)-3, length(house_price)-2, length(house_price)-1, length(house_price))])
house_price_ts = ts(house_price, start=1980+(1/4), freq=4)
hp_lag1k = append(NA, house_price_ts[-length(house_price_ts)])
hp_lag2k = append(c(NA, NA), house_price_ts[-c(length(house_price_ts)-1, length(house_price_ts))])
y1 = lm(house_price~hp_lag1)
summary(y1)
y2 = lm(house_price~hp_lag1+hp_lag2)
summary(y2)
y3 = lm(house_price~hp_lag1+hp_lag2+hp_lag3)
summary(y3)
y4 = lm(house_price~hp_lag1+hp_lag2+hp_lag3+hp_lag4)
summary(y4)
y5 = lm(house_price_ts~hp_lag1k+hp_lag2k)
summary(y5)
