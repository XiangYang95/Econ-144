knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/Xiang/OneDrive/Desktop/Econ-144/Week 5")
rm(list=ls(all=TRUE))
library(lattice)
library(foreign)
library(MASS)
library(car)
require(stats)
require(stats4)
library(KernSmooth)
library(fastICA)
library(cluster)
library(leaps)
library(mgcv)
library(rpart)
library(pan)
library(mgcv)
library(DAAG)
library("TTR")
library(tis)
require("datasets")
require(graphics)
library("forecast")
#install.packages("astsa")
#require(astsa)
library(xtable)
# New libraries added:
library(stats)
library(TSA)
library(timeSeries)
library(fUnitRoots)
library(fBasics)
library(tseries)
library(timsac)
library(TTR)
library(fpp)
setwd("C:/Users/Xiang/OneDrive/Desktop/Econ-144/Homework/Hw 3")
rm(list=ls(all=TRUE))
library(lattice)
library(foreign)
library(MASS)
library(car)
require(stats)
require(stats4)
library(KernSmooth)
library(fastICA)
library(cluster)
library(leaps)
library(mgcv)
library(rpart)
library(pan)
library(mgcv)
library(DAAG)
library("TTR")
library(tis)
require("datasets")
require(graphics)
library("forecast")
#install.packages("astsa")
#require(astsa)
library(xtable)
# New libraries added:
library(stats)
library(TSA)
library(timeSeries)
library(fUnitRoots)
library(fBasics)
library(tseries)
library(timsac)
library(TTR)
library(fpp)
theory_ma2 = arima.sim(model = list(ma = c(-2, 1.35), n = 10000)
summary(theory_ma2)
theory_ma2 = arima.sim(model = list(ma = c(-2, 1.35), n = 10000)
theory_ma2 = arima.sim(model = list(ma = c(-2, 1.35)), n = 10000)
theory_ma2 = arima.sim(model = list(ma = c(-2, 1.35)), n = 10000)
summary(theory_ma2)
summary(theory_ma2)
ARMAacf(theory_ma2)
ARMAacf(theory_ma2, lag.max = 10)
knitr::opts_chunk$set(echo = TRUE)
#Obtaining the simulated ma(2) model with 10000 points
theory_ma2 = arima.sim(model = list(ma = c(-2, 1.35)), n = 10000)
summary(theory_ma2)
ARMAacf(ma = c(-2, 1.35), lag.max = 10)
Box.test(theory_ma2, lag = 10, type = c("Box-Pierce", "Ljung-Box"))
help(auto.arima)
help(auto.arima())
??auto.arima
help(arima)
help(arima.sim)
#Obtaining the simulated ma(2) model with 10000 points
x = e = rnorm(1000)
for (t in 2:10000) x[t] = 0.7-0.2*x[t-1]+1.35*x[t-2] + e[t]
#Obtaining the simulated ma(2) model with 10000 points
x = e = rnorm(1000)
for (t in 3:10000) x[t] = 0.7-0.2*x[t-1]+1.35*x[t-2] + e[t]
summary(theory_ma2)
acf(x, lag.max = 10)
x
x[!complete.cases(x)]
#Obtaining the simulated ma(2) model with 10000 points
x = e = rnorm(1000)
for (t in 3:10000) x[t] = 0.7-0.2*x[t-1]+1.35*x[t-2] + e[t]
summary(theory_ma2)
acf(x[comlete.cases(x)], lag.max = 10)
#Obtaining the simulated ma(2) model with 10000 points
x = e = rnorm(1000)
for (t in 3:10000) x[t] = 0.7-0.2*x[t-1]+1.35*x[t-2] + e[t]
summary(theory_ma2)
acf(x[complete.cases(x)], lag.max = 10)
x = e = rnorm(1000)
for (t in 2:1000) x[t] = -0.3*x[t-1] + e[t]
quartz()
plot(x, type="l")
acf(x)
acf(diff(x))
x = e = rnorm(1000)
for (t in 2:1000) x[t] = -0.3*x[t-1] + e[t]
windows()
plot(x, type="l")
acf(x)
acf(diff(x))
x = e = rnorm(1000)
for (t in 2:1000) x[t] = -0.3*x[t-1] + e[t]
windows()
par(mfrow =c(2,1))
plot(x, type="l")
acf(x)
acf(diff(x))
#if you get a spik
#3. Xt = -0.3Xt-1 + Zt
x = e = rnorm(1000)
for (t in 2:1000) x[t] = -0.3*x[t-1] + e[t]
windows()
par(mfrow =c(1,2))
plot(x, type="l")
acf(x)
acf(diff(x))
#if you get a s
acf(x)
par(mfrow =c(1,2))
plot(x, type="l")
acf(x)
acf(diff(x))
e
#Obtaining the simulated ma(2) model with 10000 points
x = e = rnorm(100)
x[2] = 0.7 + e[2]
for (t in 3:100) x[t] = 0.7-0.2*x[t-1]+1.35*x[t-2] + e[t]
summary(theory_ma2)
acf(x[complete.cases(x)], lag.max = 10)
acf(x)
#Obtaining the simulated ma(2) model with 10000 points
x = e = rnorm(100)
x[2] = 0.7 + e[2]
for (t in 3:100) x[t] = 0.7-0.2*e[t-1]+1.35*e[t-2] + e[t]
summary(theory_ma2)
acf(x[complete.cases(x)], lag.max = 10)
#Obtaining the simulated ma(2) model with 10000 points
x = e = rnorm(100)
x[2] = 0.7 + e[2]
for (t in 3:100) x[t] = 0.7-0.2*e[t-1]+1.35*e[t-2] + e[t]
summary(theory_ma2)
acf(x, lag.max = 10)
help("acf")
help(Acf)
??Acf
rm(list = ls(all=TRUE))
ARMAacf(ma = c(-2, 1.35), lag.max = 10)
Box.test(theory_ma2, lag = 10, type = c("Box-Pierce", "Ljung-Box"))
x = e = rnorm(100)
x[2] = 0.7 + e[2]
for (t in 3:100) x[t] = 0.7-0.2*e[t-1]+1.35*e[t-2] + e[t]
summary(theory_ma2)
x = e = rnorm(100)
x[2] = 0.7 + e[2]
for (t in 3:100) x[t] = 0.7-0.2*e[t-1]+1.35*e[t-2] + e[t]
acf(x, lag.max = 10)
x = e = rnorm(100)
x[2] = 0.7 + e[2]
for (t in 3:100) x[t] = 0.7-0.2*e[t-1]+1.35*e[t-2] + e[t]
acf(x, lag.max = 10)
x = e = rnorm(100)
x[2] = 0.7 + e[2]
for (t in 3:100) x[t] = 0.7-0.2*e[t-1]+1.35*e[t-2] + e[t]
acf(x, lag.max = 10)
x = e = rnorm(100)
x[2] = 0.7 + e[2]
for (t in 3:100) x[t] = 0.7-0.2*e[t-1]+1.35*e[t-2] + e[t]
acf(x, lag.max = 10)
x = e = rnorm(100)
x[2] = 0.7 -0.2*e[1] + e[2]
for (t in 3:100) x[t] = 0.7-0.2*e[t-1]+1.35*e[t-2] + e[t]
acf(x, lag.max = 10)
x = e = rnorm(100)
x[2] = 0.7 -0.2*e[1] + e[2]
for (t in 3:100) x[t] = 0.7-0.2*e[t-1]+1.35*e[t-2] + e[t]
acf(x, lag.max = 10)
x = e = rnorm(100)
x[2] = 0.7 -0.2*e[1] + e[2]
for (t in 3:100) x[t] = 0.7-0.2*e[t-1]+1.35*e[t-2] + e[t]
acf(x, lag.max = 10)
x = e = rnorm(100)
x[2] = 0.7 -0.2*e[1] + e[2]
for (t in 3:100) x[t] = 0.7-0.2*e[t-1]+1.35*e[t-2] + e[t]
acf(x, lag.max = 10)
x = e = rnorm(100)
x[2] = 0.7 -0.2*e[1] + e[2]
for (t in 3:100) x[t] = 0.7-0.2*e[t-1]+1.35*e[t-2] + e[t]
acf(x, lag.max = 10)
x = e = rnorm(100)
x[2] = 0.7 -0.2*e[1] + e[2]
for (t in 3:100) x[t] = 0.7-0.2*e[t-1]+1.35*e[t-2] + e[t]
acf(x, lag.max = 10)
x = e = rnorm(100)
x[2] = 0.7 -0.2*e[1] + e[2]
for (t in 3:100) x[t] = 0.7-0.2*e[t-1]+1.35*e[t-2] + e[t]
acf(x, lag.max = 10)
x = e = rnorm(100)
x[2] = 0.7 -0.2*e[1] + e[2]
for (t in 3:100) x[t] = 0.7-0.2*e[t-1]+1.35*e[t-2] + e[t]
acf(x, lag.max = 10)
for (i in 1:10){
x = e = rnorm(100)
x[2] = 0.7 -0.2*e[1] + e[2]
for (t in 3:100) x[t] = 0.7-0.2*e[t-1]+1.35*e[t-2] + e[t]
acf(x, lag.max = 10)
}
k = rnorm(1)
acf(k)
x = e = rnorm(100)
y = x[1]
acf(y, main = "ACF of MA(2) with 1 observation")
z[1] = x[1]
help(vector)
x = e = rnorm(100)
y = x[1]
acf(y, main = "ACF of MA(2) with 1 observation")
z = vector()
z[1] = x[1]
z[2] = 0.7 -0.2*e[1] + e[2]
acf(z, main = "ACF of MA(2) with 2 observations")
for (i in 3:100){
x[2] = 0.7 -0.2*e[1] + e[2]
for (t in 3:i) x[t] = 0.7-0.2*e[t-1]+1.35*e[t-2] + e[t]
acf(x, main = paste("ACF of MA(2) with ", toString(i), " observations"), lag.max = 10)
}
x = e = rnorm(100)
y = x[1]
acf(y, main = "ACF of MA(2) with 1 observation")
z = vector()
z[1] = x[1]
z[2] = 0.7 -0.2*e[1] + e[2]
acf(z, main = "ACF of MA(2) with 2 observations")
for (i in 3:100){
x[2] = 0.7 -0.2*e[1] + e[2]
for (t in 3:i) x[t] = 0.7-0.2*e[t-1]+1.35*e[t-2] + e[t]
acf(x, main = paste("ACF of MA(2) with ", toString(i), " observations"), lag.max = 10)$acf
}
help(acf)
x = e = rnorm(100)
y = x[1]
acf(y, main = "ACF of MA(2) with 1 observation")
z = vector()
z[1] = x[1]
z[2] = 0.7 -0.2*e[1] + e[2]
acf(z, main = "ACF of MA(2) with 2 observations")
for (i in 3:100){
x[2] = 0.7 -0.2*e[1] + e[2]
for (t in 3:i) x[t] = 0.7-0.2*e[t-1]+1.35*e[t-2] + e[t]
acf(x, main = paste("ACF of MA(2) with ", toString(i), " observations"), lag.max = 10, plot = FALSE)
}
x = e = rnorm(100)
y = x[1]
acf(y, main = "ACF of MA(2) with 1 observation", plot = FALSE)
z = vector()
z[1] = x[1]
z[2] = 0.7 -0.2*e[1] + e[2]
acf(z, main = "ACF of MA(2) with 2 observations", plot = FALSE)
for (i in 3:100){
x[2] = 0.7 -0.2*e[1] + e[2]
for (t in 3:i) x[t] = 0.7-0.2*e[t-1]+1.35*e[t-2] + e[t]
acf(x, main = paste("ACF of MA(2) with ", toString(i), " observations"), lag.max = 10, plot = FALSE)
}
x = e = rnorm(100)
# y = x[1]
# acf(y, main = "ACF of MA(2) with 1 observation", plot = FALSE)
# z = vector()
# z[1] = x[1]
# z[2] = 0.7 -0.2*e[1] + e[2]
# acf(z, main = "ACF of MA(2) with 2 observations", plot = FALSE)
for (i in 3:100){
x[2] = 0.7 -0.2*e[1] + e[2]
for (t in 3:i) x[t] = 0.7-0.2*e[t-1]+1.35*e[t-2] + e[t]
acf(x, main = paste("ACF of MA(2) with ", toString(i), " observations"), lag.max = 10, plot = FALSE)
}
help(ACF)
help(Acf)
??Acf
ApplPrice_ts = ts(ApplPrice, start = 2007+(10/12), end = 2012 + (7/12), freq = 252)
rm(list = ls(all = TRUE))
data = read.csv("6.10.csv")
names(data) = c("date", "ApplPrice", "return")
attach(data)
ApplPrice_ts = ts(ApplPrice, start = 2007+(10/12), end = 2012 + (7/12), freq = 252)
return_ts = ts(return, start = 2007+(10/12), end = 2012 + (7/12), freq = 252)
plot(ApplPrice_ts, type = "l", main = "Plot of Apple Price", xlab = "Year", ylab = "Price")
plot(return_ts, type = "l", main = "Plot of Apple return", xlab = "Year", ylab = "Return")
Acf(ApplPrice_ts, main = "ACF of Apple Price", type = "correlation")
??Acf
ApplPrice_ts = ts(ApplPrice, start = 2007+(10/12), end = 2012 + (7/12), freq = 252)
return_ts = ts(return, start = 2007+(10/12), end = 2012 + (7/12), freq = 252)
plot(ApplPrice_ts, type = "l", main = "Plot of Apple Price", xlab = "Year", ylab = "Price")
plot(return_ts, type = "l", main = "Plot of Apple return", xlab = "Year", ylab = "Return")
forecast::Acf(ApplPrice_ts, main = "ACF of Apple Price", type = "correlation")
Pacf(ApplPrice_ts, main = "pACF of Apple Price")
ApplPrice_ts = ts(ApplPrice, start = 2007+(10/12), end = 2012 + (7/12), freq = 252)
return_ts = ts(return, start = 2007+(10/12), end = 2012 + (7/12), freq = 252)
plot(ApplPrice_ts, type = "l", main = "Plot of Apple Price", xlab = "Year", ylab = "Price")
plot(return_ts, type = "l", main = "Plot of Apple return", xlab = "Year", ylab = "Return")
forecast::Acf(ApplPrice_ts, main = "ACF of Apple Price", type = "correlation")
forecast::Pacf(ApplPrice_ts, main = "pACF of Apple Price")
forecast::Acf(return_ts, , main = "ACF of Apple return",  type = "correlation")
forecast::Pacf(return_ts, main = "PACF of Apple return")
ar1 = arima(ApplPrice_ts, c(1,1,0))
acf(ar1$residuals)
pacf(ar1$residuals)
ar1r = arima(return_ts, c(1,0,0))
acf(ar1r$residuals)
pacf(ar1r$residuals)
help9arima
help(arima)
ar1 = arima(ApplPrice_ts, order = c(1,1,0), seasonal = list(order(1,0,0), period = 10))
ar1 = arima(ApplPrice_ts, order = c(1,1,0), seasonal = list(order = c(1,0,0), period = 10))
acf(ar1$residuals)
pacf(ar1$residuals)
ar1 = arima(ApplPrice_ts, order = c(1,1,0), seasonal = list(order = c(1,0,0)))
help(auto.arima)
